{"version":3,"sources":["components/header/Style.js","components/drawer/Drawer.js","components/header/Header.js","components/Loading.js","components/cardAndButtons/Style.js","components/cardOfPerson/Style.js","components/cardOfPerson/CardOfPerson.js","components/cardAndButtons/CardAndButtons.js","components/app/Style.js","components/app/App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","appBar","position","bottom","top","height","toolbar","display","flexDirection","justifyContent","marginTop","marginBottom","minHeight","h2","fontFamily","textAlign","fontWeight","fontSize","margin","fontStyle","logo","width","list","fullList","SwipeableTemporaryDrawer","props","anchor","classes","React","useState","left","state","setState","toggleDrawer","open","event","type","key","Button","onClick","color","size","path","mdiMenu","SwipeableDrawer","onClose","onOpen","className","clsx","role","onKeyDown","List","ListItem","button","ListItemIcon","mdiGift","ListItemText","primary","Divider","map","text","index","chooseGender","mdiFaceOutline","mdiFaceWomanOutline","chooseNationality","mdiMap","HideOnScroll","children","window","trigger","useScrollTrigger","target","undefined","Slide","appear","direction","in","HideAppBar","Fragment","CssBaseline","AppBar","Toolbar","mdiDramaMasks","root","marginLeft","spacing","CircularIndeterminate","CircularProgress","styles","fetchRandomUser","cardAndButton","genderButtons","flexWrap","maxWidth","image","media","paddingTop","expand","transform","transition","transitions","create","duration","shortest","expandOpen","MonthInLetters","number","CardOfPerson","expanded","setExpanded","sequenceOfBirth","dob","date","yearOfBirth","substr","monthOfBirth","dayOfBirth","sequenceOfRegistry","registered","yearOfRegistry","monthOfRegistry","dayOfRegistry","backgroundColor","i","length","parsed","parseInt","Number","isInteger","createPseudorandomColor","cell","Card","CardHeader","avatar","Avatar","aria-label","style","name","first","action","IconButton","title","last","subheader","age","CardMedia","picture","large","CardContent","Typography","variant","component","location","street","postcode","city","country","CardActions","disableSpacing","aria-expanded","mdiChevronDown","Collapse","timeout","unmountOnExit","paragraph","phone","email","CardAndButtons","loading","person","gender","nationality","componentDidMount","bind","fetch","response","json","data","this","results","x","url","basedOn","mdiArrowRightBold","Component","withStyles","mainPage","link","textTransform","textDecoration","App","Boolean","hostname","match","createMuiTheme","palette","main","blue","light","dark","secondary","yellow","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.125efcf7.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  appBar: {\r\n    position: 'fixed',\r\n    bottom: 'auto',\r\n    top: 0,\r\n    height: '3rem'\r\n  },\r\n  toolbar:{\r\n    display:'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    marginTop: 'auto',\r\n    marginBottom: 'auto',\r\n    minHeight:'2rem',\r\n  },\r\n  h2:{\r\n    fontFamily: 'billabongregular',\r\n    textAlign: 'center',\r\n    fontWeight: 100,\r\n    fontSize: '1.5rem',\r\n    margin:0,\r\n    fontStyle: 'normal',\r\n  },\r\n  logo:{\r\n    width: '48px',\r\n    margin: '6px',\r\n    display:'flex',\r\n    justifyContent: 'center'\r\n  },\r\n}));\r\n\r\nexport default useStyles\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Icon from '@mdi/react';\r\nimport { mdiMenu } from '@mdi/js';\r\nimport { mdiFaceOutline } from '@mdi/js';\r\nimport { mdiFaceWomanOutline } from '@mdi/js';\r\nimport { mdiGift } from '@mdi/js';\r\nimport { mdiMap } from '@mdi/js';\r\n\r\nconst useStyles = makeStyles({\r\n  list: {\r\n    width: 250,\r\n  },\r\n  fullList: {\r\n    width: 'auto',\r\n  },\r\n});\r\n\r\nexport default function SwipeableTemporaryDrawer(props) {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    left: false\r\n  });\r\n\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n\r\n  const list = (anchor) => (\r\n    <div\r\n      className={clsx(classes.list, {\r\n        [classes.fullList]: anchor === 'top' || anchor === 'bottom',\r\n      })}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(anchor, false)}\r\n      onKeyDown={toggleDrawer(anchor, false)}\r\n    >\r\n      <List>\r\n        <ListItem button>\r\n          <ListItemIcon>\r\n            <Icon color=\"#1976d2\" size={1} path={mdiGift} />\r\n          </ListItemIcon>\r\n          <ListItemText primary={'Upgrade to premium'} />\r\n        </ListItem>\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        {['Women', 'Men'].map((text, index) => (\r\n          <ListItem onClick={()=>props.chooseGender(index)} button key={text}>\r\n            <ListItemIcon>{index % 2 === 1 ?\r\n              <Icon color=\"#1976d2\" size={1} path={mdiFaceOutline} /> : <Icon color=\"#d81b60\" size={1} path={mdiFaceWomanOutline} />}\r\n            </ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n      <ListItem onClick={()=>props.chooseNationality(0)} button>\r\n        <ListItemIcon>\r\n          <Icon color=\"#1976d2\" size={1} path={mdiMap} />\r\n        </ListItemIcon>\r\n        <ListItemText primary={'All'} />\r\n      </ListItem>\r\n        {['Australia', 'Brazil', 'Canada', 'Germany', 'Finland', 'France', 'Great Britain', 'Iran', 'Ireland', 'Korea', 'Netherlands', 'New Zealand', 'Norway', 'Spain', 'Switzerland', 'Turkey', 'United States'].map((text, index) => (\r\n          <ListItem onClick={()=>props.chooseNationality(index+1)} button key={text}>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n          <Button onClick={toggleDrawer('left', true)}><Icon color=\"white\" size={1} path={mdiMenu} /></Button>\r\n          <SwipeableDrawer\r\n            anchor={'left'}\r\n            open={state['left']}\r\n            onClose={toggleDrawer('left', false)}\r\n            onOpen={toggleDrawer('left', true)}\r\n          >\r\n            {list('left')}\r\n          </SwipeableDrawer>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport useStyles from './Style.js';\r\nimport Icon from '@mdi/react';\r\nimport { mdiDramaMasks } from '@mdi/js';\r\nimport SwipeableTemporaryDrawer from '../drawer/Drawer.js';\r\n\r\nfunction HideOnScroll(props) {\r\n  const { children, window } = props;\r\n  // Note that you normally won't need to set the window ref as useScrollTrigger\r\n  // will default to window.\r\n  // This is only being set here because the demo is in an iframe.\r\n  const trigger = useScrollTrigger({ target: window ? window() : undefined });\r\n\r\n  return (\r\n    <Slide appear={false} direction=\"down\" in={!trigger}>\r\n      {children}\r\n    </Slide>\r\n  );\r\n}\r\n\r\nHideOnScroll.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n};\r\n\r\nexport default function HideAppBar(props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <HideOnScroll>\r\n        <AppBar className={classes.appBar}>\r\n          <Toolbar className={classes.toolbar}>\r\n            <SwipeableTemporaryDrawer chooseGender={props.chooseGender} chooseNationality={props.chooseNationality}/>\r\n            <h2 className={classes.h2}>Mr. Random</h2>\r\n            <div className={classes.logo}><Icon color=\"white\" size={1} path={mdiDramaMasks} /></div>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </HideOnScroll>\r\n      <Toolbar />\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    '& > * + *': {\r\n      marginLeft: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function CircularIndeterminate() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CircularProgress />\r\n    </div>\r\n  );\r\n}\r\n","const styles = () => ({\r\n  fetchRandomUser:{\r\n    display:'flex',\r\n    flexDirection: 'column',\r\n    margin:'auto',\r\n  },\r\n  cardAndButton:{\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  genderButtons:{\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-around'\r\n  },\r\n  button:{\r\n    maxWidth: 345,\r\n    marginBottom: '0.5rem'\r\n  },\r\n  image:{\r\n    margin:'auto'\r\n  }\r\n});\r\n\r\nexport default styles;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 345,\r\n    marginBottom: '0.7rem'\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n}));\r\n\r\nexport default useStyles\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Icon from '@mdi/react';\r\nimport { mdiChevronDown  } from '@mdi/js';\r\n\r\nimport useStyles from './Style.js';\r\n\r\nfunction MonthInLetters(number){\r\n  const months = [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ];\r\n  if (number[0]=='0'){number = number[1];}\r\n  number--;\r\n  number = months[number];\r\n  return number;\r\n}\r\n\r\nfunction createPseudorandomColor(number) {\r\n  var color = '#';\r\n  let i=0;\r\n  while (color.length<7) {\r\n    let parsed = parseInt(number[i], 10);\r\n    if (Number.isInteger(parsed)){\r\n      color += number[i];\r\n    }\r\n    i++;\r\n  }\r\n  return color;\r\n}\r\n\r\n\r\nexport default function CardOfPerson(props) {\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(false);\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n\r\n  const sequenceOfBirth = props.props.dob.date;\r\n  const yearOfBirth = sequenceOfBirth.substr(0,4);\r\n  let monthOfBirth = sequenceOfBirth.substr(5,2);\r\n  const dayOfBirth = sequenceOfBirth.substr(8,2);\r\n  monthOfBirth = MonthInLetters(monthOfBirth);\r\n\r\n  const sequenceOfRegistry = props.props.registered.date;\r\n  const yearOfRegistry = sequenceOfRegistry.substr(0,4);\r\n  let monthOfRegistry = sequenceOfRegistry.substr(5,2);\r\n  const dayOfRegistry = sequenceOfRegistry.substr(8,2);\r\n  monthOfRegistry = MonthInLetters(monthOfRegistry);\r\n\r\n  const backgroundColor = createPseudorandomColor(props.props.cell);\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardHeader\r\n        avatar={\r\n          <Avatar aria-label=\"recipe\" style={{backgroundColor: backgroundColor}} className={classes.avatar}>\r\n            {props.props.name.first[0]}\r\n          </Avatar>\r\n        }\r\n        action={\r\n          <IconButton aria-label=\"settings\">\r\n          </IconButton>\r\n        }\r\n        title={props.props.name.title + \" \" + props.props.name.first + \" \" + props.props.name.last}\r\n        subheader={dayOfBirth + \" \" + monthOfBirth + \" \" + yearOfBirth + \" (\" + props.props.dob.age+ \")\"}\r\n      />\r\n      <CardMedia\r\n        className={classes.media}\r\n        image = {props.props.picture.large}\r\n        title=\"Paella dish\"\r\n      />\r\n      <CardContent>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          {props.props.location.street.number + \" \" + props.props.location.street.name + \", \" + props.props.location.postcode + \", \" + props.props.location.city + \", \" + props.props.location.country}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions disableSpacing>\r\n        <IconButton\r\n          className={clsx(classes.expand, {\r\n            [classes.expandOpen]: expanded,\r\n          })}\r\n          onClick={handleExpandClick}\r\n          aria-expanded={expanded}\r\n          aria-label=\"show more\"\r\n        >\r\n        <Icon color=\"#1976d2\" size={1} path={mdiChevronDown} />\r\n        </IconButton>\r\n      </CardActions>\r\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n        <CardContent>\r\n          <Typography variant=\"h6\">Contact:</Typography>\r\n          <Typography paragraph>\r\n            <div>cell: {props.props.cell}</div>\r\n            <div>cell: {props.props.phone}</div>\r\n            <div>email: {props.props.email}</div>\r\n          </Typography>\r\n          <Typography variant=\"h6\">Member since:</Typography>\r\n          <Typography paragraph>\r\n            {dayOfRegistry + \" \" + monthOfRegistry + \" \" + yearOfRegistry + \" (\" + props.props.registered.age+ \" years)\"}\r\n          </Typography>\r\n        </CardContent>\r\n      </Collapse>\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport CircularIndeterminate from \"../Loading.js\";\r\nimport styles from \"./Style.js\";\r\nimport { withStyles } from '@material-ui/styles';\r\nimport CardOfPerson from '../cardOfPerson/CardOfPerson';\r\nimport Button from '@material-ui/core/Button';\r\nimport Icon from '@mdi/react';\r\nimport { mdiArrowRightBold } from '@mdi/js';\r\n\r\nclass CardAndButtons extends React.Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n          loading: true,\r\n          person: null,\r\n          backgroundColor: 'red',\r\n          gender: this.props.props.gender,\r\n          nationality: this.props.props.nationality\r\n    }\r\n    this.componentDidMount = this.componentDidMount.bind(this);\r\n    this.chooseGender = this.chooseGender.bind(this);\r\n    this.chooseNationality = this.chooseNationality.bind(this);\r\n  }\r\n\r\n  async componentDidMount(){\r\n    let url = 'https://randomuser.me/api/?gender=female';\r\n    const response = await fetch(url);\r\n    const data = await response.json();\r\n    this.setState({person: data.results[0], gender:this.props.props.gender, loading: false});\r\n  }\r\n\r\n  async chooseGender(x){\r\n    let url;\r\n    x===0 ? (url = 'https://randomuser.me/api/?gender=female'):(url = 'https://randomuser.me/api/?gender=male')\r\n    const response = await fetch(url);\r\n    const data = await response.json();\r\n    this.setState({person: data.results[0], gender:x, loading: false, nationality:'all'});\r\n  }\r\n\r\n  async chooseNationality(x){\r\n    let url;\r\n    x === 'all' ? (url = 'https://randomuser.me/api') : (url = 'https://randomuser.me/api/?nat=' + x)\r\n    const response = await fetch(url);\r\n    const data = await response.json();\r\n    this.setState({person: data.results[0], gender:3, loading: false, nationality:x});\r\n  }\r\n\r\n  render(){\r\n    const { classes } = this.props;\r\n    //shiiiiiiiiiiiiiiiiiiiit\r\n    if (this.props.props.basedOn==='gender' && this.state.gender !== this.props.props.gender){\r\n      this.chooseGender(this.props.props.gender);\r\n    }\r\n    if (this.props.props.basedOn==='nationality' && this.state.nationality !== this.props.props.nationality){\r\n      this.chooseNationality(this.props.props.nationality);\r\n    }\r\n    return(\r\n      <div className={classes.fetchRandomUser}>\r\n        {this.state.loading || !this.state.person ? (\r\n          <CircularIndeterminate/>\r\n        ):(\r\n          <div className={classes.cardAndButton}>\r\n            <CardOfPerson props={this.state.person}/>\r\n            <div className={classes.genderButtons}>\r\n\r\n              { this.props.props.basedOn === 'gender' ?\r\n                (<React.Fragment>\r\n                <Button onClick={()=>this.chooseGender(this.props.props.gender)} className={classes.button} variant=\"contained\" color=\"primary\">\r\n                  <Icon color=\"white\" size={1} path={mdiArrowRightBold} />\r\n                </Button>\r\n                </React.Fragment>):\r\n\r\n                (<React.Fragment>\r\n                <Button onClick={()=>this.chooseNationality(this.props.props.nationality)} className={classes.button} variant=\"contained\" color=\"primary\">\r\n                  <Icon color=\"white\" size={1} path={mdiArrowRightBold} />\r\n                </Button>\r\n                </React.Fragment>)\r\n              }\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(CardAndButtons);\r\n","const styles = () => ({\r\n  mainPage:{\r\n    display:'flex',\r\n    flexDirection: 'column',\r\n    margin:'auto',\r\n  },\r\n  link:{\r\n    margin:'auto',\r\n    textTransform:'none',\r\n    textDecoration:'none',\r\n    color:'black'\r\n  }\r\n});\r\n\r\nexport default styles;\r\n","import React, {Component} from 'react';\nimport HideAppBar from '../header/Header.js';\nimport CardAndButtons from '../cardAndButtons/CardAndButtons.js'\nimport styles from \"./Style.js\";\nimport { withStyles } from '@material-ui/styles';\n\nclass App extends Component {\n  state = {\n    gender:0,\n    nationality: 'all',\n    basedOn: 'gender'\n  }\n\n  chooseGender = (index) => {\n    this.setState({gender:index, basedOn:'gender'});\n  }\n\n  chooseNationality = (index) => {\n    const abbreviations = ['all', 'au', 'br', 'ca', 'de', 'fi', 'fr', 'gb', 'ir', 'ie', 'dk', 'nl', 'nz', 'no', 'es', 'ch', 'tr', 'us'];\n    this.setState({nationality:abbreviations[index], basedOn:'nationality'});\n  }\n\n  render(){\n    const { classes } = this.props;\n    return (\n      <div className={classes.mainPage} >\n        <HideAppBar chooseGender={this.chooseGender} chooseNationality={this.chooseNationality}/>\n        <CardAndButtons props={this.state} />\n      </div>\n    );\n  }\n\n}\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App.js';\nimport * as serviceWorker from './serviceWorker';\nimport {createMuiTheme, MuiThemeProvider} from '@material-ui/core'\nimport {yellow, blue} from '@material-ui/core/colors'\n\nconst theme = createMuiTheme({\n    palette:{\n        primary: {\n            main: blue[600],\n            light:blue[400],\n            dark: blue[800]\n        },\n        secondary: {\n            main: yellow[700],\n            light:yellow[500],\n            dark: yellow[900]\n        }\n    }\n})\n\nReactDOM.render(\n  <React.StrictMode>\n    <MuiThemeProvider theme={theme}>\n      <App />\n    </MuiThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}